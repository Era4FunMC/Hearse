From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wangxyper <wangxyper@163.com>
Date: Tue, 24 Jan 2023 09:32:37 +0800
Subject: [PATCH] Fix some threading issue in bukkit event system


diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index e0f69edf603c2ec99bc92b16b18912272cc41bd9..efbfcc009e3d9faf4c8093801d9f1999c063494d 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1489,6 +1489,12 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      */
     boolean isPrimaryThread();
 
+    //Hearse start
+    /**
+     * Get current thread is worker or other
+     */
+    boolean isWorkerThread();
+
     // Paper start
     /**
      * Gets the message that is displayed on the server list.
diff --git a/src/main/java/org/bukkit/plugin/SimplePluginManager.java b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
index bd4d1a40f53784662174d426533ef4b5433a15b7..716136226c5c01f022a53dc5594bb43a81514ed3 100644
--- a/src/main/java/org/bukkit/plugin/SimplePluginManager.java
+++ b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
@@ -607,6 +607,8 @@ public final class SimplePluginManager implements PluginManager {
         }
     }
 
+    private final Object eventLock = new Object(); //Hearse ensure event system thread safe
+
     /**
      * Calls an event with the given details.
      *
@@ -632,6 +634,20 @@ public final class SimplePluginManager implements PluginManager {
     }
 
     private void fireEvent(@NotNull Event event) {
+        //Hearse start
+        if (server.isWorkerThread()){
+            synchronized (this.eventLock){
+                this.fireCallEvent(event);
+            }
+            return;
+        }
+
+        this.fireCallEvent(event);
+        //Hearse end
+    }
+
+    //Hearse start - split to a new method
+    private void fireCallEvent(Event event){
         HandlerList handlers = event.getHandlers();
         RegisteredListener[] listeners = handlers.getRegisteredListeners();
 
@@ -653,7 +669,7 @@ public final class SimplePluginManager implements PluginManager {
                             plugin.getDescription().getAuthors(),
                             plugin.getDescription().getFullName(),
                             ex.getMessage()
-                            ));
+                    ));
                 }
             } catch (Throwable ex) {
                 gg.pufferfish.pufferfish.sentry.SentryContext.setEventContext(event, registration); // Pufferfish
@@ -668,6 +684,7 @@ public final class SimplePluginManager implements PluginManager {
             }
         }
     }
+    //Hearse end
 
     @Override
     public void registerEvents(@NotNull Listener listener, @NotNull Plugin plugin) {
